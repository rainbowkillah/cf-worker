{
  "version": 3,
  "sources": ["../../../src/my_durable_object.js", "../../../src/index.js", "../../../../../../usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-RRDanZ/middleware-insertion-facade.js", "../../../../../../usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-RRDanZ/middleware-loader.entry.ts"],
  "sourceRoot": "/workspaces/cf-worker/com.mrrainbowsmoke.home/.wrangler/tmp/dev-JlRSio",
  "sourcesContent": ["export class MyDurableObject {\n  constructor(state, env) {\n    this.state = state\n    this.env = env\n    this._initPromise = this._ensureDefaults()\n  }\n\n  async _ensureDefaults() {\n    const existing = await this.state.storage.get('links')\n    if (!existing) {\n      const defaults = [\n        { title: 'Home', url: 'https://mrrainbowsmoke.com', slug: 'home', desc: 'Primary domain' },\n        { title: 'Blog', url: 'https://blog.mrrainbowsmoke.com', slug: 'blog', desc: 'Blog and posts' },\n        { title: 'Projects', url: 'https://projects.mrrainbowsmoke.com', slug: 'projects', desc: 'Projects and experiments' }\n      ]\n      await this.state.storage.put('links', defaults)\n    }\n    // conversations map: conversations:{sessionId} -> [{role,msg,ts}]\n    // rate limiting map handled per session key\n  }\n\n  async fetch(request) {\n    await this._initPromise\n    const url = new URL(request.url)\n    const pathname = url.pathname || '/'\n\n    // Links API\n    if (pathname === '/links' && request.method === 'GET') return this._getLinks()\n    if (pathname === '/links' && request.method === 'POST') return this._requireAdmin(request, () => this._addLink(request))\n    if (pathname.startsWith('/links/') && request.method === 'DELETE') return this._requireAdmin(request, () => this._deleteLink(pathname.split('/').pop()))\n\n    // Verification endpoint for Microsoft Verified ID\n    if (pathname === '/verify' && request.method === 'POST') return this._verifyPresentation(request)\n\n    // Chat API\n    if (pathname === '/chat' && (request.method === 'POST' || request.method === 'GET')) return this._chatHandler(request)\n\n    return new Response('Not found', { status: 404 })\n  }\n\n  async _getLinks() {\n    const links = (await this.state.storage.get('links')) || []\n    return new Response(JSON.stringify(links), { headers: { 'content-type': 'application/json' } })\n  }\n\n  // Admin session helper - executes fn if admin token valid\n  async _requireAdmin(request, fn) {\n    try {\n      const auth = request.headers.get('authorization') || request.headers.get('x-admin-token')\n      if (!auth) return new Response(JSON.stringify({ error: 'unauthorized' }), { status: 401, headers: { 'content-type': 'application/json' } })\n      const token = auth.replace(/^Bearer\\s+/i, '')\n      const key = `admin:${token}`\n      const info = await this.state.storage.get(key)\n      if (!info || !info.expires || Date.now() > info.expires) return new Response(JSON.stringify({ error: 'unauthorized' }), { status: 401, headers: { 'content-type': 'application/json' } })\n      // token valid - run the provided function\n      return await fn()\n    } catch (e) {\n      return new Response(JSON.stringify({ error: String(e) }), { status: 500 })\n    }\n  }\n\n  async _addLink(request) {\n    try {\n      const body = await request.json()\n      if (!body || !body.url || !body.title) return new Response('Missing title or url', { status: 400 })\n      const slug = body.slug || this._slugify(body.title)\n      const links = (await this.state.storage.get('links')) || []\n      // replace if slug exists\n      const filtered = links.filter(l => l.slug !== slug)\n      filtered.push({ title: body.title, url: body.url, slug, desc: body.desc || '' })\n      await this.state.storage.put('links', filtered)\n      return new Response(JSON.stringify({ ok: true, slug }), { headers: { 'content-type': 'application/json' } })\n    } catch (e) {\n      return new Response(String(e), { status: 500 })\n    }\n  }\n\n  async _deleteLink(slug) {\n    const links = (await this.state.storage.get('links')) || []\n    const filtered = links.filter(l => l.slug !== slug)\n    await this.state.storage.put('links', filtered)\n    return new Response(JSON.stringify({ ok: true }), { headers: { 'content-type': 'application/json' } })\n  }\n\n  _slugify(s) { return String(s).toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '') }\n\n  // Verify a Verifiable Presentation via Microsoft Verified ID (if configured)\n  async _verifyPresentation(request) {\n    try {\n      const bodyText = await request.text()\n      const verifyUrl = this.env.MS_VC_VERIFY_URL\n      if (!verifyUrl) return new Response(JSON.stringify({ error: 'verification_not_configured' }), { status: 501, headers: { 'content-type': 'application/json' } })\n\n      // Acquire bearer token: prefer client credentials if configured\n      let bearer = this.env.MS_VC_API_KEY || ''\n      if (!bearer && this.env.MS_VC_CLIENT_ID && this.env.MS_VC_CLIENT_SECRET && this.env.MS_TENANT_ID) {\n        const tokenRes = await fetch(`https://login.microsoftonline.com/${this.env.MS_TENANT_ID}/oauth2/v2.0/token`, {\n          method: 'POST',\n          headers: { 'content-type': 'application/x-www-form-urlencoded' },\n          body: new URLSearchParams({\n            client_id: this.env.MS_VC_CLIENT_ID,\n            client_secret: this.env.MS_VC_CLIENT_SECRET,\n            grant_type: 'client_credentials',\n            scope: this.env.MS_VC_SCOPE || 'https://verifiedid.did.msidentity.com/.default'\n          }).toString()\n        })\n        if (!tokenRes.ok) {\n          const txt = await tokenRes.text()\n          return new Response(JSON.stringify({ error: 'oauth_failed', status: tokenRes.status, body: txt }), { status: 502, headers: { 'content-type': 'application/json' } })\n        }\n        const tokenJson = await tokenRes.json()\n        bearer = tokenJson.access_token\n      }\n\n      if (!bearer) return new Response(JSON.stringify({ error: 'no_verifier_auth' }), { status: 403, headers: { 'content-type': 'application/json' } })\n\n      // Post presentation to Microsoft verify endpoint\n      const verifyRes = await fetch(verifyUrl, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', 'authorization': `Bearer ${bearer}` },\n        body: bodyText\n      })\n\n      if (!verifyRes.ok) {\n        const txt = await verifyRes.text()\n        return new Response(JSON.stringify({ ok: false, status: verifyRes.status, body: txt }), { status: 400, headers: { 'content-type': 'application/json' } })\n      }\n\n      const j = await verifyRes.json()\n\n      // Microsoft response shapes vary; check common success indicators and errors\n      const hasErrors = Array.isArray(j.errors) && j.errors.length > 0\n      const successFlags = [j.verificationResult, j.status, j.isValid, j.result?.isValid]\n      const isSuccess = !hasErrors && successFlags.some(f => f === 'Success' || f === 'success' || f === true)\n      if (!isSuccess) return new Response(JSON.stringify({ ok: false, result: j }), { status: 400, headers: { 'content-type': 'application/json' } })\n\n      // Extract verifiable credential(s)\n      const vcs = j.verifiableCredential || j.result?.verifiableCredential || j.verifiableCredentials || j.result?.verifiableCredentials || []\n      const firstVC = (Array.isArray(vcs) && vcs[0]) || null\n\n      // Allow config for claim path to check admin rights: e.g. 'credentialSubject.role' or 'credentialSubject.admin'\n      const claimPath = (this.env.ADMIN_CLAIM_PATH || 'credentialSubject.role')\n      let claimValue = null\n      if (firstVC) {\n        // simple dot-path resolver\n        const parts = claimPath.split('.')\n        let cur = firstVC\n        for (const p of parts) {\n          if (cur == null) { cur = null; break }\n          cur = cur[p]\n        }\n        claimValue = cur\n      }\n\n      // Admin policy: either ADMIN_CLAIM_VALUE matches or credentialSubject.admin === true\n      const requiredClaimVal = this.env.ADMIN_CLAIM_VALUE || 'admin'\n      const isAdmin = (claimValue === requiredClaimVal) || (firstVC?.credentialSubject && (firstVC.credentialSubject.admin === true || firstVC.credentialSubject.role === requiredClaimVal))\n      if (!isAdmin) return new Response(JSON.stringify({ ok: false, reason: 'not_admin', result: j }), { status: 403, headers: { 'content-type': 'application/json' } })\n\n      // Issue admin token\n      const token = crypto.randomUUID()\n      const ttlMs = parseInt(this.env.ADMIN_SESSION_TTL_MS || '900000', 10) || 15 * 60 * 1000\n      const info = { created: Date.now(), expires: Date.now() + ttlMs, verified: { issuer: firstVC?.issuer || firstVC?.iss, claimPath, claimValue } }\n      await this.state.storage.put(`admin:${token}`, info)\n      return new Response(JSON.stringify({ ok: true, token, expires: info.expires }), { headers: { 'content-type': 'application/json' } })\n    } catch (e) {\n      return new Response(JSON.stringify({ error: String(e) }), { status: 500, headers: { 'content-type': 'application/json' } })\n    }\n  }\n\n  // Rate limiter: allow up to `limit` messages per `windowMs` per session\n  async _checkRateLimit(sessionId, limit = 5, windowMs = 60_000) {\n    const key = `rate:${sessionId}`\n    const now = Date.now()\n    const val = (await this.state.storage.get(key)) || { count: 0, start: now }\n    if (now - val.start > windowMs) {\n      // reset\n      await this.state.storage.put(key, { count: 1, start: now })\n      return { ok: true }\n    }\n    if (val.count >= limit) return { ok: false, retryAfter: Math.ceil((val.start + windowMs - now) / 1000) }\n    val.count = val.count + 1\n    await this.state.storage.put(key, val)\n    return { ok: true }\n  }\n\n  async _chatHandler(request) {\n    // support GET for simple health\n    if (request.method === 'GET') return new Response(JSON.stringify({ ok: true }), { headers: { 'content-type': 'application/json' } })\n\n    try {\n      const text = (await request.text()).trim()\n      // session id passed in header X-Session-Id or query param\n      const url = new URL(request.url)\n      let sessionId = request.headers.get('x-session-id') || url.searchParams.get('sid')\n      if (!sessionId) {\n        sessionId = crypto.randomUUID()\n      }\n\n      // rate limit\n      const rl = await this._checkRateLimit(sessionId)\n      if (!rl.ok) return new Response(JSON.stringify({ error: 'rate_limited', retry_after: rl.retryAfter }), { status: 429, headers: { 'content-type': 'application/json' } })\n\n      // store message\n      const convKey = `convo:${sessionId}`\n      const conv = (await this.state.storage.get(convKey)) || []\n      conv.push({ role: 'user', text, ts: Date.now() })\n\n      // determine whether to use external LLM\n      const OPENAI_KEY = this.env.OPENAI_API_KEY\n      let reply = ''\n      if (OPENAI_KEY) {\n        // build a small prompt from last 6 messages\n        const history = conv.slice(-6).map(m => ({ role: m.role === 'user' ? 'user' : 'assistant', content: m.text }))\n        try {\n          const model = this.env.OPENAI_MODEL || 'gpt-3.5-turbo'\n          const payload = { model, messages: history }\n          const res = await fetch('https://api.openai.com/v1/chat/completions', {\n            method: 'POST',\n            headers: { 'content-type': 'application/json', 'authorization': `Bearer ${OPENAI_KEY}` },\n            body: JSON.stringify(payload)\n          })\n          if (res.ok) {\n            const j = await res.json()\n            reply = j.choices && j.choices[0] && j.choices[0].message && j.choices[0].message.content ? j.choices[0].message.content.trim() : ''\n          } else {\n            reply = `LLM error: ${res.status}`\n          }\n        } catch (e) {\n          reply = 'LLM request failed'\n        }\n      }\n\n      // fallback rule-based reply if LLM not configured or returned nothing\n      if (!reply) {\n        const t = text.toLowerCase()\n        if (!t) reply = 'Say something and I will try to help.'\n        else if (t.includes('domain')) reply = 'Primary domains: https://mrrainbowsmoke.com, https://blog.mrrainbowsmoke.com, https://projects.mrrainbowsmoke.com.'\n        else if (t.includes('links') || t.includes('link')) reply = 'Try: /, https://mrrainbowsmoke.com, https://github.com/rainbowkillah'\n        else if (t.includes('hello') || t.includes('hi') || t.includes('hey')) reply = 'Hi! I can list domains or give a short description. Ask: \"What domains do you have?\"'\n        else if (t.includes('help')) reply = 'You can ask: \"What domains do you have?\", \"Where is your blog?\", or \"Who are you?\"'\n        else if (t.includes('who') || t.includes('you')) reply = 'I am a tiny virtual assistant running inside this Cloudflare Worker. I can show links and basic info.'\n        else reply = \"I'm not sure how to help with that. Try asking for 'domains', 'links', or 'help'.\"\n      }\n\n      conv.push({ role: 'bot', text: reply, ts: Date.now() })\n      await this.state.storage.put(convKey, conv)\n\n      return new Response(JSON.stringify({ reply, sessionId }), { headers: { 'content-type': 'application/json' } })\n    } catch (e) {\n      return new Response(JSON.stringify({ error: String(e) }), { status: 500, headers: { 'content-type': 'application/json' } })\n    }\n  }\n}\n", "import { MyDurableObject } from './my_durable_object'\n\nexport default {\n  async fetch(request, env) {\n    const url = new URL(request.url)\n    // API paths for examples\n    if (url.pathname === '/_kv') return kvExample(env)\n    if (url.pathname === '/_d1') return d1Example(env)\n    if (url.pathname === '/_r2') return r2Example(env)\n    if (url.pathname === '/_do') return doExample(request, env)\n    // Simple virtual chat agent API\n    // Forward chat/admin API to Durable Object binding if present\n    if (url.pathname.startsWith('/api/')) return forwardToDO(request, env)\n    if (url.pathname === '/admin') return adminPage()\n\n    return landingPage()\n  }\n}\n\nasync function kvExample(env) {\n  const kv = env.home_kv || env.MY_KV\n  if (!kv) return new Response('KV binding not configured', { status: 404 })\n  try {\n    const val = await kv.get('visitor_count')\n    return new Response(JSON.stringify({ visitor_count: val || 0 }), { headers: { 'content-type': 'application/json' } })\n  } catch (e) {\n    return new Response('Error reading KV: ' + String(e), { status: 500 })\n  }\n}\n\nasync function d1Example(env) {\n  const db = env.home_db\n  if (!db) return new Response('D1 binding `home_db` not configured', { status: 404 })\n  try {\n    const res = await db.prepare('SELECT 1 as ok').all()\n    return new Response(JSON.stringify(res.results), { headers: { 'content-type': 'application/json' } })\n  } catch (e) {\n    return new Response('Error querying D1: ' + String(e), { status: 500 })\n  }\n}\n\nasync function r2Example(env) {\n  const r2 = env.home_r2\n  if (!r2) return new Response('R2 binding `home_r2` not configured', { status: 404 })\n  try {\n    const list = await r2.list()\n    return new Response(JSON.stringify({ objects: list.objects || [] }), { headers: { 'content-type': 'application/json' } })\n  } catch (e) {\n    return new Response('Error listing R2: ' + String(e), { status: 500 })\n  }\n}\n\nasync function doExample(request, env) {\n  const DO = env.MY_DO_CLASS\n  if (!DO) return new Response('Durable Object binding `MY_DO_CLASS` not configured', { status: 404 })\n  try {\n    const id = DO.idFromName('global-counter')\n    const stub = DO.get(id)\n    const resp = await stub.fetch(request)\n    return resp\n  } catch (e) {\n    return new Response('Error calling Durable Object: ' + String(e), { status: 500 })\n  }\n}\n\nfunction landingPage() {\n  const html = `<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <title>home.mrrainbowsmoke.com</title>\n    <style>\n      :root{\n        --bg:#050505;\n        --card:rgba(255,255,255,0.04);\n      }\n      html,body{height:100%;margin:0}\n      body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;background:linear-gradient(120deg,#0f0c29,#302b63,#24243e);display:flex;align-items:center;justify-content:center;color:#fff}\n      .card{width:min(920px,94%);padding:36px;border-radius:16px;background:var(--card);backdrop-filter:blur(6px);box-shadow:0 10px 40px rgba(2,6,23,0.6);border:1px solid rgba(255,255,255,0.04)}\n      header{display:flex;align-items:center;gap:16px}\n      .logo{width:64px;height:64px;border-radius:12px;background:linear-gradient(90deg,#ff3cac,#784ba0,#2b86c5,#00f5a0);box-shadow:0 6px 18px rgba(0,0,0,0.5);display:flex;align-items:center;justify-content:center;font-weight:700}\n      h1{margin:0;font-size:clamp(20px,3.4vw,36px)}\n      p.lead{margin:8px 0 18px;opacity:0.95}\n      nav a{color:transparent;background:linear-gradient(90deg,#ff3cac,#ff8a00,#fecd1a,#2b86c5,#7effc1);-webkit-background-clip:text;background-clip:text;text-decoration:none;font-weight:600;margin-right:16px}\n      .cols{display:flex;gap:20px;margin-top:20px}\n      .left{flex:1}\n      .right{width:320px}\n      .card-panel{background:rgba(255,255,255,0.02);padding:14px;border-radius:10px}\n      .chat{display:flex;flex-direction:column;height:360px}\n      .messages{flex:1;overflow:auto;padding:8px;display:flex;flex-direction:column;gap:8px}\n      .msg{padding:8px 12px;border-radius:12px;max-width:80%}\n      .msg.user{align-self:flex-end;background:linear-gradient(90deg,#7effc1,#2b86c5);color:#042}\n      .msg.bot{align-self:flex-start;background:rgba(255,255,255,0.06);color:#fff}\n      .input-row{display:flex;gap:8px;margin-top:8px}\n      .input-row input{flex:1;padding:10px;border-radius:10px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:#fff}\n      .input-row button{padding:10px 12px;border-radius:10px;border:none;background:linear-gradient(90deg,#ff3cac,#784ba0);color:#fff;font-weight:600}\n      footer{margin-top:16px;font-size:0.9em;opacity:0.85}\n      a.small{color:#9be7ff}\n    </style>\n    <script>\n      async function sendMessage(e){\n        e && e.preventDefault()\n        const input = document.getElementById('chat-input')\n        const text = input.value.trim()\n        if(!text) return\n        appendMessage('user', text)\n        input.value=''\n        try{\n          const res = await fetch('/api/chat', {method:'POST', body: text})\n          const data = await res.json()\n          appendMessage('bot', data.reply)\n        }catch(err){\n          appendMessage('bot', 'Sorry, the chat agent is unavailable.')\n        }\n      }\n      function appendMessage(kind, text){\n        const cont = document.querySelector('.messages')\n        const el = document.createElement('div')\n        el.className = 'msg '+(kind==='user'?'user':'bot')\n        el.textContent = text\n        cont.appendChild(el)\n        cont.scrollTop = cont.scrollHeight\n      }\n      // sample greeting\n      window.addEventListener('DOMContentLoaded', ()=>{\n        appendMessage('bot','Welcome! I can help you navigate the domains and answer simple questions. Try: \"What domains do you have?\"')\n      })\n    </script>\n  </head>\n  <body>\n    <div class=\"card\">\n      <header>\n        <div class=\"logo\">RB</div>\n        <div>\n          <h1>home.mrrainbowsmoke.com \u2014 front door</h1>\n          <div class=\"lead\">A colorful gateway to the main domains. Use the chat on the right to ask for links or info.</div>\n          <nav>\n            <a href=\"https://mrrainbowsmoke.com\">mrrainbowsmoke.com</a>\n            <a href=\"https://blog.mrrainbowsmoke.com\">blog.mrrainbowsmoke.com</a>\n            <a href=\"https://projects.mrrainbowsmoke.com\">projects.mrrainbowsmoke.com</a>\n          </nav>\n        </div>\n      </header>\n\n      <div class=\"cols\">\n        <div class=\"left\">\n          <div class=\"card-panel\">\n            <h3>About this front door</h3>\n            <p style=\"margin-top:8px\">This Worker serves a lightweight landing page that routes visitors to the primary domains. It also hosts a small, in-worker virtual chat agent for fast suggestions and navigation help.</p>\n            <ul style=\"margin-top:8px\">\n              <li>Links: quick access to main domains</li>\n              <li>Chat: ask for domain info, contact, or a short help</li>\n              <li>Privacy: the chat runs server-side in this Worker and only echoes simple rule-based replies (no external services)</li>\n            </ul>\n          </div>\n        </div>\n\n        <aside class=\"right\">\n          <div class=\"card-panel chat\">\n            <div class=\"messages\"></div>\n            <form onsubmit=\"sendMessage(event)\" class=\"input-row\">\n              <input id=\"chat-input\" placeholder=\"Ask the virtual assistant...\" autocomplete=\"off\" />\n              <button type=\"submit\">Send</button>\n            </form>\n            <div style=\"margin-top:8px;font-size:0.8em\"><a href=\"/admin\" class=\"small\">Manage links</a></div>\n          </div>\n        </aside>\n      </div>\n\n      <footer>\n        <div>Bindings examples: <a class=\"small\" href=\"/_kv\">KV</a> \u00B7 <a class=\"small\" href=\"/_d1\">D1</a> \u00B7 <a class=\"small\" href=\"/_r2\">R2</a> \u00B7 <a class=\"small\" href=\"/_do\">DO</a></div>\n      </footer>\n    </div>\n  </body>\n</html>`\n\n  return new Response(html, {\n    headers: { 'content-type': 'text/html;charset=UTF-8' }\n  })\n}\n\nasync function forwardToDO(request, env){\n  const DO = env.MY_DO_CLASS\n  if (!DO) {\n    // No durable object bound - fall back to in-worker handler\n    if (request.method === 'POST' && new URL(request.url).pathname === '/api/chat') return chatHandler(request)\n    return new Response('Durable Object binding `MY_DO_CLASS` not configured', { status: 502 })\n  }\n\n  const id = DO.idFromName('global-chat')\n  const stub = DO.get(id)\n  // Rewrite the URL path to remove /api prefix so DO sees '/chat' or '/links'\n  const url = new URL(request.url)\n  const newPath = url.pathname.replace(/^\\/api/, '') || '/'\n  // Use a dummy origin so the DO's `new URL(request.url)` can parse it correctly in local runtime\n  const origin = url.origin || 'http://localhost:8787'\n  const proxiedUrl = origin + newPath + url.search\n  const proxied = new Request(proxiedUrl, {\n    method: request.method,\n    headers: request.headers,\n    body: request.body,\n    redirect: 'manual'\n  })\n  return stub.fetch(proxied)\n}\n\nfunction adminPage(){\n  const html = `<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <title>Links Admin</title>\n    <style>body{font-family:system-ui,Arial;background:#071021;color:#fff;padding:24px} .panel{background:rgba(255,255,255,0.03);padding:12px;border-radius:8px} input,textarea{width:100%;padding:8px;margin-top:6px;border-radius:6px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:#fff}</style>\n  </head>\n  <body>\n    <h1>Links Admin</h1>\n    <div class=\"panel\">\n      <h3>Admin login (Microsoft Verified ID)</h3>\n      <p>Paste your Verifiable Presentation JSON below and click Verify. A short-lived admin session token will be issued on success.</p>\n      <textarea id=\"vp\" placeholder='Paste presentation JSON here' rows=\"6\" style=\"width:100%;background:transparent;color:#fff;border:1px solid rgba(255,255,255,0.06);padding:8px;border-radius:6px\"></textarea>\n      <div style=\"margin-top:8px\"><button id=\"verifyBtn\">Verify & Sign In</button> <span id=\"adminStatus\" style=\"margin-left:8px\"></span></div>\n      <hr style=\"margin:12px 0\">\n      <h3>Existing links</h3>\n      <ul id=\"links\"></ul>\n  <h3>Add / update link</h3>\n      <form id=\"addForm\">\n        <label>Title<input id=\"title\" required /></label>\n        <label>URL<input id=\"url\" required /></label>\n        <label>Slug (optional)<input id=\"slug\" /></label>\n        <label>Description<textarea id=\"desc\"></textarea></label>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n    <script>\n      // admin auth helpers\n      async function tryLoadAdmin(){\n        const token = localStorage.getItem('adminToken')\n        if (!token) return document.getElementById('adminStatus').textContent = 'Not signed in'\n        document.getElementById('adminStatus').textContent = 'Signed in (token stored)'\n      }\n      document.getElementById('verifyBtn').addEventListener('click', async ()=>{\n        const vp = document.getElementById('vp').value.trim()\n        if (!vp) return alert('Paste the presentation JSON first')\n        document.getElementById('adminStatus').textContent = 'Verifying...'\n        try{\n          const res = await fetch('/api/verify', { method: 'POST', headers: {'content-type':'application/json'}, body: vp })\n          const j = await res.json()\n          if (!res.ok) { document.getElementById('adminStatus').textContent = 'Verify failed'; return alert(JSON.stringify(j)) }\n          localStorage.setItem('adminToken', j.token)\n          document.getElementById('adminStatus').textContent = 'Signed in'\n        }catch(e){ document.getElementById('adminStatus').textContent = 'Verify error'; alert(String(e)) }\n      })\n      async function load(){\n        const res = await fetch('/api/links')\n        const links = await res.json()\n        const ul = document.getElementById('links')\n        ul.innerHTML = ''\n        for (const l of links){\n          const li = document.createElement('li')\n          li.innerHTML = '<strong>'+escapeHtml(l.title)+'</strong> - <a href=\"'+escapeHtml(l.url)+'\" target=\"_blank\">'+escapeHtml(l.url)+'</a> <button data-slug=\"'+escapeHtml(l.slug)+'\">Delete</button>'\n          ul.appendChild(li)\n        }\n        document.querySelectorAll('#links button').forEach(b => b.addEventListener('click', async e=>{\n          const slug = e.target.getAttribute('data-slug')\n          const token = localStorage.getItem('adminToken')\n          await fetch('/api/links/'+slug, { method: 'DELETE', headers: token ? { 'authorization': 'Bearer '+token } : {} })\n          load()\n        }))\n      }\n      function escapeHtml (s) { return String(s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\"/g,'&quot;') }\n      document.getElementById('addForm').addEventListener('submit', async e=>{\n        e.preventDefault()\n        const body = { title: document.getElementById('title').value, url: document.getElementById('url').value, slug: document.getElementById('slug').value, desc: document.getElementById('desc').value }\n        const token = localStorage.getItem('adminToken')\n        await fetch('/api/links', { method: 'POST', headers: Object.assign({'content-type':'application/json'}, token ? { 'authorization': 'Bearer '+token } : {}), body: JSON.stringify(body) })\n        document.getElementById('addForm').reset()\n        load()\n      })\n      load()\n      tryLoadAdmin()\n    </script>\n  </body>\n</html>`\n  return new Response(html, { headers: { 'content-type': 'text/html;charset=UTF-8' } })\n}\n\n// Single in-worker chat fallback\nasync function chatHandler(request){\n  if (request.method !== 'POST') return new Response(JSON.stringify({ error: 'POST only' }), { status: 405, headers: { 'content-type': 'application/json' } })\n  const text = (await request.text()).trim().toLowerCase()\n  let reply = \"I'm not sure how to help with that. Try asking for 'domains', 'links', or 'help'.\"\n\n  if (!text) reply = 'Say something and I will try to help.'\n  else if (text.includes('domain')) reply = 'Primary domains: https://mrrainbowsmoke.com, https://blog.mrrainbowsmoke.com, https://projects.mrrainbowsmoke.com.'\n  else if (text.includes('links') || text.includes('link')) reply = 'Try: /, https://mrrainbowsmoke.com, https://github.com/rainbowkillah'\n  else if (text.includes('hello') || text.includes('hi') || text.includes('hey')) reply = 'Hi! I can list domains or give a short description. Ask: \"What domains do you have?\"'\n  else if (text.includes('help')) reply = 'You can ask: \"What domains do you have?\", \"Where is your blog?\", or \"Who are you?\"'\n  else if (text.includes('who') || text.includes('you')) reply = 'I am a tiny virtual assistant running inside this Cloudflare Worker. I can show links and basic info.'\n\n  return new Response(JSON.stringify({ reply }), { headers: { 'content-type': 'application/json' } })\n}\n\n// Re-export Durable Object class so Wrangler can bind it by class name\nexport { MyDurableObject }\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/workspaces/cf-worker/com.mrrainbowsmoke.home/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/workspaces/cf-worker/com.mrrainbowsmoke.home/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/workspaces/cf-worker/com.mrrainbowsmoke.home/.wrangler/tmp/bundle-RRDanZ/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/usr/local/share/nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/workspaces/cf-worker/com.mrrainbowsmoke.home/.wrangler/tmp/bundle-RRDanZ/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/workspaces/cf-worker/com.mrrainbowsmoke.home/.wrangler/tmp/bundle-RRDanZ/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
